name: Build/release

on: push

jobs:
  release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
        package_manager: [npm]
        #  macos-latest, ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: setting environment
        run: |
          echo "${{secrets.D1}} >> .env"
          sed -i 's/#"//g' .env
          echo "${{secrets.D2}} >> .env"
          echo "${{secrets.D3}} >> .env"
          echo "${{secrets.D4}} >> .env"
          echo "${{secrets.D5}} >> .env"
          echo "${{secrets.D6}} >> .env"
          echo "${{secrets.D7}} >> .env"
          echo "${{secrets.D8}} >> .env"
          echo "${{secrets.D9}} >> .env"
          echo "${{secrets.D10}} >> .env"
          echo "${{secrets.D11}} >> .env
          echo "${{secrets.D12}} >> .env"
          echo "${{secrets.D13}} >> .env"
          echo "${{secrets.D14}} >> .env"
          echo "${{secrets.D15}} >> .env"
          echo "${{secrets.D16}} >> .env"
          tr "\n" " " < .env > temp.env && mv temp.env .env
        shell: cmd
      - name: Update env
        run: |
          yarn add  ts-node
          yarn run config -- --environment=prod
          yarn run config -- --environment=dev
      - name: Yarn clean
        # Clean Yarn package
        run: |
         yarn cache clean

      - name: Build/release Electron app
        uses: samuelmeuli/action-electron-builder@v1
        with:
          # GitHub token, automatically provided to the action
          # (No need to define this secret in the repo settings)
          github_token: ${{ secrets.github_token }}

          # If the commit is tagged with a version (e.g. "v1.0.0"),
          # release the app after building
          release: ${{ startsWith(github.ref, 'refs/tags/v') }}
