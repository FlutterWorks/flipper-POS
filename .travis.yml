# sudo: required
# dist: trusty

# language: c

# matrix:
#   include:
#     - os: osx
#     - os: linux
#       env: CC=clang CXX=clang++ npm_config_clang=1
#       compiler: clang

# node_js:
#   - 8

# cache:
#   directories:
#     - node_modules

# addons:
#   apt:
#     sources:
#       - ubuntu-toolchain-r-test
#     packages:
#       - g++-4.8
#       - icnsutils
#       - graphicsmagick
#       - libgnome-keyring-dev
#       - xz-utils
#       - xorriso
#       - xvfb

# install:
#   - nvm install 8
#   - npm install electron-builder@next
#   - npm install
#   - npm rebuild node-sass
#   - export DISPLAY=':99.0'
#   - Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &

# before_script:
#   - export DISPLAY=:99.0
#   - sh -e /etc/init.d/xvfb start &
#   - sleep 3

# script:
#   - npm run electron:linux
#   - npm run electron:windows

sudo: required
dist: trusty

# language: c
matrix:
  include:
    - os: osx
      osx_image: xcode9.4
      language: node_js
      node_js: "10"
      env:
        - ELECTRON_CACHE=$HOME/.cache/electron
        - ELECTRON_BUILDER_CACHE=$HOME/.cache/electron-builder

    - os: linux
      services: docker
      language: generic

cache:
  directories:
    - node_modules
    - $HOME/.cache/electron
    - $HOME/.cache/electron-builder

script:
  - |
    if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      docker run --rm \
        --env-file <(env | grep -iE 'DEBUG|NODE_|ELECTRON_|YARN_|NPM_|CI|CIRCLE|TRAVIS|APPVEYOR_|CSC_|_TOKEN|_KEY|AWS_|STRIP|BUILD_') \
        -v ${PWD}:/project \
        -v ~/.cache/electron:/root/.cache/electron \
        -v ~/.cache/electron-builder:/root/.cache/electron-builder \
        electronuserland/builder:wine \
        /bin/bash -c "yarn --link-duplicates --pure-lockfile && yarn release --linux --win"
    else
      npm run electron:linux
      npm run electron:windows
    fi
before_cache:
  - rm -rf $HOME/.cache/electron-builder/wine

branches:
  except:
    - "/^v\\d+\\.\\d+\\.\\d+$/"
