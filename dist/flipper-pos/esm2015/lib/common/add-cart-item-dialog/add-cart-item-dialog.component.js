import { Component, HostListener, Inject } from '@angular/core';
import { FormBuilder, Validators } from '@angular/forms';
import { NotificationService, SettingsService } from '@enexus/flipper-components';
import { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';
export class AddCartItemDialogComponent {
    constructor(dialogRef, formBuilder, notificationSvc, setting, taxes$) {
        this.dialogRef = dialogRef;
        this.formBuilder = formBuilder;
        this.notificationSvc = notificationSvc;
        this.setting = setting;
        this.taxes$ = taxes$;
        this.units = [];
        this.submitted = false;
        this.isFocused = '';
        this.units = this.setting.units();
    }
    get formControl() {
        return this.form.controls;
    }
    onKeydownHandler(event) {
        if (event.key === 'Esc') {
            this.dialogRef.close('close');
        }
    }
    ngOnInit() {
        this.form = this.formBuilder.group({
            price: ['', Validators.required, Validators.min(0)],
            name: 'Custom Amount',
            quantity: [1, Validators.min(0)],
            tax: null,
            unit: '',
        });
    }
    onSubmit() {
        this.submitted = true;
        // stop here if form is invalid
        if (this.form.invalid) {
            this.notificationSvc.error('Add Cart item', 'We need you to complete all of the required fields before we can continue');
            return;
        }
        else {
            this.dialogRef.close({
                price: this.form.value.price,
                quantity: this.form.value.quantity && this.form.value.quantity > 0 ? this.form.value.quantity : 1,
                variantName: this.form.value.name ? this.form.value.name : 'No prduct name',
                productName: this.form.value.name ? this.form.value.name : '--',
                taxName: this.form.value.tax ? this.form.value.tax.name : 0,
                taxRate: this.form.value.tax ? this.form.value.tax.percentage : 0,
                unit: this.form.value.unit,
                canTrackingStock: false,
                currentStock: 0,
                sku: '00',
            });
        }
    }
    focusing(value) {
        this.isFocused = value;
        // if (value === 'name') {
        //   this.form.controls.name.setValue('')
        // } else if (value === 'price') {
        //   this.form.controls.price.setValue('')
        // } else if (value === 'quantity') {
        //   this.form.controls.quantity.setValue('')
        // }
    }
    focusingOut() {
        this.isFocused = '';
    }
}
AddCartItemDialogComponent.decorators = [
    { type: Component, args: [{
                selector: 'flipper-add-cart-item-dialog',
                template: "<h1 mat-dialog-title>Add Cart Item</h1>\r\n<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n      <div>\r\n            <mat-error *ngIf=\"submitted && formControl.price.errors\">\r\n                <div *ngIf=\"formControl.price.errors.required\">Price is required.</div>\r\n                <div *ngIf=\"formControl.price.errors.min\">Price entered is negative number. </div>\r\n            </mat-error>\r\n\r\n            <mat-error *ngIf=\"submitted && formControl.quantity.errors\">\r\n                <div *ngIf=\"formControl.quantity.errors.required\">Quantity is required  </div>\r\n                <div *ngIf=\"formControl.quantity.errors.min\">Quantity entered is negative number. </div>\r\n            </mat-error>\r\n        \r\n              <table style=\"width: 100%;\">\r\n          \r\n                  <tr class=\"tr\" [class.trIsFocused]=\"isFocused=='price'\" style=\"border-top: 1px #d5d9dc solid; border-right: 1px #d5d9dc solid; border-left: 1px #d5d9dc solid;\">\r\n                      \r\n                      <td class=\"td\"  [class.tdIsFocused]=\"isFocused=='price'\">\r\n                          Price\r\n                        </td>\r\n                        <td style=\"width:60%\">\r\n                          <input type=\"number\" class=\"input\" formControlName=\"price\"\r\n                          (focus)=\"focusing('price')\" (focusout)=\"focusingOut()\" autofocus placeholder=\"0.00\" />\r\n                          \r\n                        </td>\r\n                  </tr>\r\n                  <tr class=\"tr\" [class.trIsFocused]=\"isFocused=='quantity' || isFocused=='unit'\" style=\" border-right: 1px #d5d9dc solid; border-left: 1px #d5d9dc solid;\">\r\n                      \r\n                      <td class=\"td\"  [class.tdIsFocused]=\"isFocused=='quantity' || isFocused=='unit'\">\r\n                          Quantity/unit\r\n                        </td>\r\n                        <td style=\"width:60%\">\r\n                        <table style=\"width:100%\">\r\n                          <tr>\r\n                            <td style=\"width:50%\">\r\n                              <input type=\"number\" class=\"input\" formControlName=\"quantity\"\r\n                              (focus)=\"focusing('quantity')\" (focusout)=\"focusingOut()\" autofocus placeholder=\"0\" />\r\n                            </td>\r\n                          <td style=\"width:50%\">\r\n                            <mat-select class=\"select\" formControlName=\"unit\" placeholder=\"Choose Unit\"\r\n                            (focus)=\"focusing('unit')\"  (focusout)=\"focusingOut()\">\r\n                                    <mat-option *ngFor=\"let unit of units\" [value]=\"unit.value\">\r\n                                    {{unit.name}}\r\n                                    </mat-option>\r\n                          </mat-select>\r\n                          </td>\r\n                          </tr>\r\n                        </table>\r\n          \r\n                        </td>\r\n                  </tr>\r\n                  <tr class=\"tr\" [class.trIsFocused]=\"isFocused=='name'\" style=\"border-right: 1px #d5d9dc solid; border-left: 1px #d5d9dc solid;\">\r\n                      \r\n                      <td class=\"td\"  [class.tdIsFocused]=\"isFocused=='name'\">\r\n                        Description\r\n                        </td>\r\n                        <td style=\"width:60%\">\r\n                          <input type=\"text\" class=\"input\" formControlName=\"name\"\r\n                          (focus)=\"focusing('name')\" (focusout)=\"focusingOut()\" autofocus placeholder=\"Description(product or service name)\" />\r\n                        </td>\r\n                  </tr>\r\n\r\n                  <tr style=\" border-right: 1px #d5d9dc solid; border-left: 1px #d5d9dc solid;\" class=\"tr\" [class.trIsFocused]=\"isFocused=='taxes'\">\r\n                    <td class=\"td\" [class.tdIsFocused]=\"isFocused=='taxes'\">\r\n                      <label>Tax</label>\r\n                    </td>\r\n                    <td style=\"width: 60%;\">\r\n\r\n                      <mat-select class=\"select\" formControlName=\"tax\" placeholder=\"Choose Tax\"\r\n                        (focus)=\"focusing('taxes')\"\r\n                        (focusout)=\"focusingOut()\">\r\n                        <mat-option *ngFor=\"let tax of taxes$\" [value]=\"tax\">\r\n                          {{tax.name}} ({{tax.percentage}}%)\r\n                        </mat-option>\r\n                      </mat-select>\r\n\r\n                    </td>\r\n                  </tr>\r\n\r\n              </table>    \r\n        \r\n      </div>\r\n      <div class=\"mt-3 mb-3\" style=\"float: right;\">\r\n          <button mat-button (click)=\"dialogRef.close('close')\" class=\"ml-3\" cdkFocusInitial>Cancel</button>\r\n          <button  type=\"submit\" class=\"button-default button--success ml-1\" cdkFocusInitial>Add</button>\r\n      </div>\r\n</form>\r\n",
                styles: [".toolbar{background-color:#211a36;color:#fff!important}input{background-color:initial!important;width:100%!important}input,mat-select{border:none!important;font-size:14px!important;line-height:1.715!important;padding:12px 16px!important}mat-select{background-color:#fff!important;width:100%!important;width:100%}.mat-select-placeholder,.mat-select-value,mat-select{color:#2996cc!important}textarea{background:0 0;border:0;height:120.03px;padding:12px 16px;resize:none;width:100%}.tr{border-bottom:1px solid #d5d9dc;color:#343b42;display:flex;font-size:14px;line-height:1.715;width:100%}.td{width:40%;width:200px}.td,.td-sm{background-color:#ebedef;cursor:default;display:flex;font-weight:500;justify-content:space-between;padding:12px 16px}.td-sm{width:25%;width:200px}.trIsFocused{border-bottom:1px solid #2996cc}.tdIsFocused{background-color:#d4eaf5}.invalid{border-bottom:1px solid #ad061c}.form-link-with-spacing{display:block;padding:12px 16px;width:100%}.hyperlink{color:#2996cc!important;cursor:pointer;font-size:14px;font-weight:500;line-height:1.715;text-decoration:none}.price{width:100%}.price .currency{display:inline-block;margin-bottom:6px;margin-left:5px;width:25%}.price .pinput{display:inline-block;width:50%}.table--flex .table-row,.table--flex tr{display:flex;line-height:1.715}.table-row,tr{border-bottom:1px solid #d5d9dc}.table--flex .table-cell,.table--flex .table-cell-header,.table--flex td,.table--flex th{align-items:center;display:flex;flex:1 1 100%}.table-cell-header:first-child,.table-cell:first-child,td:first-child,th:first-child{padding-left:16px}.editable-variation-table__header__cell{overflow:visible}.table-cell-header,th{border-top:1px solid #d5d9dc;color:#343b42;font-weight:500}.table-cell,.table-cell-header,td,th{height:48px;overflow:hidden;padding-left:8px;padding-right:8px;text-overflow:ellipsis;vertical-align:middle;white-space:nowrap}.table-header,thead{background-color:#ebedef;text-align:left}.table--editable{border-left:1px solid #d5d9dc;border-right:1px solid #d5d9dc}.editable-variation-list__more-options-cell{align-items:center;display:flex;height:100%;justify-content:center;position:absolute;right:-40px;top:0;width:40px}.editable-variation-list__more-options-cell .dropdown{position:relative}.dropdown__trigger{cursor:pointer;outline:0}.more-actions-menu__trigger{align-items:center;display:flex;height:100%;justify-content:center;width:100%}svg:not(:root){overflow:hidden}.caret-down:after,.caret-left:after,.caret-right:after,.caret-up:after,.svg-icon{display:inline-block}"]
            },] }
];
AddCartItemDialogComponent.ctorParameters = () => [
    { type: MatDialogRef },
    { type: FormBuilder },
    { type: NotificationService },
    { type: SettingsService },
    { type: Array, decorators: [{ type: Inject, args: [MAT_DIALOG_DATA,] }] }
];
AddCartItemDialogComponent.propDecorators = {
    onKeydownHandler: [{ type: HostListener, args: ['document:keydown', ['$event'],] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRkLWNhcnQtaXRlbS1kaWFsb2cuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZmxpcHBlci1wb3Mvc3JjL2xpYi9jb21tb24vYWRkLWNhcnQtaXRlbS1kaWFsb2cvYWRkLWNhcnQtaXRlbS1kaWFsb2cuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsWUFBWSxFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQTtBQUV2RSxPQUFPLEVBQUUsV0FBVyxFQUFhLFVBQVUsRUFBRSxNQUFNLGdCQUFnQixDQUFBO0FBQ25FLE9BQU8sRUFBRSxtQkFBbUIsRUFBUyxlQUFlLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQTtBQUN4RixPQUFPLEVBQUUsWUFBWSxFQUFFLGVBQWUsRUFBRSxNQUFNLDBCQUEwQixDQUFBO0FBT3hFLE1BQU0sT0FBTywwQkFBMEI7SUFHckMsWUFDUyxTQUFtRCxFQUNsRCxXQUF3QixFQUN0QixlQUFvQyxFQUN0QyxPQUF3QixFQUNBLE1BQWU7UUFKeEMsY0FBUyxHQUFULFNBQVMsQ0FBMEM7UUFDbEQsZ0JBQVcsR0FBWCxXQUFXLENBQWE7UUFDdEIsb0JBQWUsR0FBZixlQUFlLENBQXFCO1FBQ3RDLFlBQU8sR0FBUCxPQUFPLENBQWlCO1FBQ0EsV0FBTSxHQUFOLE1BQU0sQ0FBUztRQVBqRCxVQUFLLEdBQVUsRUFBRSxDQUFBO1FBZWpCLGNBQVMsR0FBRyxLQUFLLENBQUE7UUFFakIsY0FBUyxHQUFHLEVBQUUsQ0FBQTtRQVJaLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLEVBQUUsQ0FBQTtJQUNuQyxDQUFDO0lBRUQsSUFBSSxXQUFXO1FBQ2IsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQTtJQUMzQixDQUFDO0lBSzZDLGdCQUFnQixDQUFDLEtBQW9CO1FB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RlosV0FBVztZQUNYLG1CQUFtQjtZQUFTLGVBQWU7d0NBZ0IvQyxNQUFNLFNBQUMsZUFBZTs7OytCQVl4QixZQUFZLFNBQUMsa0JBQWtCLEVBQUUsQ0FBQyxRQUFRLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgSG9zdExpc3RlbmVyLCBJbmplY3QgfSBmcm9tICdAYW5ndWxhci9jb3JlJ1xyXG5cclxuaW1wb3J0IHsgRm9ybUJ1aWxkZXIsIEZvcm1Hcm91cCwgVmFsaWRhdG9ycyB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJ1xyXG5pbXBvcnQgeyBOb3RpZmljYXRpb25TZXJ2aWNlLCBUYXhlcywgU2V0dGluZ3NTZXJ2aWNlIH0gZnJvbSAnQGVuZXh1cy9mbGlwcGVyLWNvbXBvbmVudHMnXHJcbmltcG9ydCB7IE1hdERpYWxvZ1JlZiwgTUFUX0RJQUxPR19EQVRBIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvZGlhbG9nJ1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdmbGlwcGVyLWFkZC1jYXJ0LWl0ZW0tZGlhbG9nJyxcclxuICB0ZW1wbGF0ZVVybDogJy4vYWRkLWNhcnQtaXRlbS1kaWFsb2cuY29tcG9uZW50Lmh0bWwnLFxyXG4gIHN0eWxlVXJsczogWycuL2FkZC1jYXJ0LWl0ZW0tZGlhbG9nLmNvbXBvbmVudC5jc3MnXSxcclxufSlcclxuZXhwb3J0IGNsYXNzIEFkZENhcnRJdGVtRGlhbG9nQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuICB1bml0czogYW55W10gPSBbXVxyXG5cclxuICBjb25zdHJ1Y3RvcihcclxuICAgIHB1YmxpYyBkaWFsb2dSZWY6IE1hdERpYWxvZ1JlZjxBZGRDYXJ0SXRlbURpYWxvZ0NvbXBvbmVudD4sXHJcbiAgICBwcml2YXRlIGZvcm1CdWlsZGVyOiBGb3JtQnVpbGRlcixcclxuICAgIHByb3RlY3RlZCBub3RpZmljYXRpb25TdmM6IE5vdGlmaWNhdGlvblNlcnZpY2UsXHJcbiAgICBwcml2YXRlIHNldHRpbmc6IFNldHRpbmdzU2VydmljZSxcclxuICAgIEBJbmplY3QoTUFUX0RJQUxPR19EQVRBKSBwdWJsaWMgdGF4ZXMkOiBUYXhlc1tdXHJcbiAgKSB7XHJcbiAgICB0aGlzLnVuaXRzID0gdGhpcy5zZXR0aW5nLnVuaXRzKClcclxuICB9XHJcblxyXG4gIGdldCBmb3JtQ29udHJvbCgpIHtcclxuICAgIHJldHVybiB0aGlzLmZvcm0uY29udHJvbHNcclxuICB9XHJcbiAgc3VibWl0dGVkID0gZmFsc2VcclxuICBmb3JtOiBGb3JtR3JvdXBcclxuICBpc0ZvY3VzZWQgPSAnJ1xyXG5cclxuICBASG9zdExpc3RlbmVyKCdkb2N1bWVudDprZXlkb3duJywgWyckZXZlbnQnXSkgb25LZXlkb3duSGFuZGxlcihldmVudDogS2V5Ym9hcmRFdmVudCkge1xyXG4gICAgaWYgKGV2ZW50LmtleSA9PT0gJ0VzYycpIHtcclxuICAgICAgdGhpcy5kaWFsb2dSZWYuY2xvc2UoJ2Nsb3NlJylcclxuICAgIH1cclxuICB9XHJcblxyXG4gIG5nT25Jbml0KCkge1xyXG4gICAgdGhpcy5mb3JtID0gdGhpcy5mb3JtQnVpbGRlci5ncm91cCh7XHJcbiAgICAgIHByaWNlOiBbJycsIFZhbGlkYXRvcnMucmVxdWlyZWQsIFZhbGlkYXRvcnMubWluKDApXSxcclxuICAgICAgbmFtZTogJ0N1c3RvbSBBbW91bnQnLFxyXG4gICAgICBxdWFudGl0eTogWzEsIFZhbGlkYXRvcnMubWluKDApXSxcclxuICAgICAgdGF4OiBudWxsLFxyXG4gICAgICB1bml0OiAnJyxcclxuICAgIH0pXHJcbiAgfVxyXG5cclxuICBvblN1Ym1pdCgpIHtcclxuICAgIHRoaXMuc3VibWl0dGVkID0gdHJ1ZVxyXG5cclxuICAgIC8vIHN0b3AgaGVyZSBpZiBmb3JtIGlzIGludmFsaWRcclxuICAgIGlmICh0aGlzLmZvcm0uaW52YWxpZCkge1xyXG4gICAgICB0aGlzLm5vdGlmaWNhdGlvblN2Yy5lcnJvcihcclxuICAgICAgICAnQWRkIENhcnQgaXRlbScsXHJcbiAgICAgICAgJ1dlIG5lZWQgeW91IHRvIGNvbXBsZXRlIGFsbCBvZiB0aGUgcmVxdWlyZWQgZmllbGRzIGJlZm9yZSB3ZSBjYW4gY29udGludWUnXHJcbiAgICAgIClcclxuICAgICAgcmV0dXJuXHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLmRpYWxvZ1JlZi5jbG9zZSh7XHJcbiAgICAgICAgcHJpY2U6IHRoaXMuZm9ybS52YWx1ZS5wcmljZSxcclxuICAgICAgICBxdWFudGl0eTogdGhpcy5mb3JtLnZhbHVlLnF1YW50aXR5ICYmIHRoaXMuZm9ybS52YWx1ZS5xdWFudGl0eSA+IDAgPyB0aGlzLmZvcm0udmFsdWUucXVhbnRpdHkgOiAxLFxyXG4gICAgICAgIHZhcmlhbnROYW1lOiB0aGlzLmZvcm0udmFsdWUubmFtZSA/IHRoaXMuZm9ybS52YWx1ZS5uYW1lIDogJ05vIHByZHVjdCBuYW1lJyxcclxuICAgICAgICBwcm9kdWN0TmFtZTogdGhpcy5mb3JtLnZhbHVlLm5hbWUgPyB0aGlzLmZvcm0udmFsdWUubmFtZSA6ICctLScsXHJcbiAgICAgICAgdGF4TmFtZTogdGhpcy5mb3JtLnZhbHVlLnRheCA/IHRoaXMuZm9ybS52YWx1ZS50YXgubmFtZSA6IDAsXHJcbiAgICAgICAgdGF4UmF0ZTogdGhpcy5mb3JtLnZhbHVlLnRheCA/IHRoaXMuZm9ybS52YWx1ZS50YXgucGVyY2VudGFnZSA6IDAsXHJcbiAgICAgICAgdW5pdDogdGhpcy5mb3JtLnZhbHVlLnVuaXQsXHJcbiAgICAgICAgY2FuVHJhY2tpbmdTdG9jazogZmFsc2UsXHJcbiAgICAgICAgY3VycmVudFN0b2NrOiAwLFxyXG4gICAgICAgIHNrdTogJzAwJyxcclxuICAgICAgfSlcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGZvY3VzaW5nKHZhbHVlOiBhbnkpIHtcclxuICAgIHRoaXMuaXNGb2N1c2VkID0gdmFsdWVcclxuICAgIC8vIGlmICh2YWx1ZSA9PT0gJ25hbWUnKSB7XHJcbiAgICAvLyAgIHRoaXMuZm9ybS5jb250cm9scy5uYW1lLnNldFZhbHVlKCcnKVxyXG4gICAgLy8gfSBlbHNlIGlmICh2YWx1ZSA9PT0gJ3ByaWNlJykge1xyXG4gICAgLy8gICB0aGlzLmZvcm0uY29udHJvbHMucHJpY2Uuc2V0VmFsdWUoJycpXHJcbiAgICAvLyB9IGVsc2UgaWYgKHZhbHVlID09PSAncXVhbnRpdHknKSB7XHJcbiAgICAvLyAgIHRoaXMuZm9ybS5jb250cm9scy5xdWFudGl0eS5zZXRWYWx1ZSgnJylcclxuICAgIC8vIH1cclxuICB9XHJcbiAgZm9jdXNpbmdPdXQoKSB7XHJcbiAgICB0aGlzLmlzRm9jdXNlZCA9ICcnXHJcbiAgfVxyXG59XHJcbiJdfQ==