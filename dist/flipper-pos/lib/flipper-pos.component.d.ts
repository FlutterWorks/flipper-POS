import { HttpClient } from '@angular/common/http';
import { OnInit } from '@angular/core';
import { CalculateTotalClassPipe, Order, Branch, OrderDetails, Business, Taxes, PouchDBService, Variant } from '@enexus/flipper-components';
import { ProductService, StockService, VariationService } from '@enexus/flipper-inventory';
export declare class FlipperPosComponent implements OnInit {
    private database;
    private stock;
    private http;
    variant: VariationService;
    product: ProductService;
    private totalPipe;
    get theVariantFiltered(): Variant[];
    set theVariantFiltered(value: Variant[]);
    get currentOrder(): Order;
    set currentOrder(value: Order);
    get stockVariant(): any[];
    set stockVariant(value: any[]);
    get taxes(): Taxes[];
    set taxes(value: Taxes[]);
    branch: Branch | null;
    defaultBusiness$: Business;
    defaultBranch: Branch;
    defaultTax$: Taxes;
    orderDetails: OrderDetails[];
    currency: any;
    constructor(database: PouchDBService, stock: StockService, http: HttpClient, variant: VariationService, product: ProductService, totalPipe: CalculateTotalClassPipe);
    variants: Variant[];
    private seTheVariantFiltered;
    collectCashCompleted: object;
    private setCurrentOrder;
    private setStockVariant;
    private setTaxes;
    date: string;
    ngOnInit(): Promise<void>;
    currentBusiness(): Promise<void>;
    getTaxes(): Promise<void>;
    currentBranches(): Promise<void>;
    makeid(length: number): string;
    generateCode(): string;
    newOrder(): Promise<void>;
    hasDraftOrder(): Promise<void>;
    draftOrder(branchId: any): Promise<void>;
    stockVariants(): Promise<void>;
    loadVariants(param?: any): any[];
    iWantToSearchVariant(event: any): void;
    filterByValue(arrayOfObject: any[], term: any): any[];
    updateOrderDetails(details: {
        action: string;
        item: OrderDetails;
    }): Promise<void>;
    updateOrder(orderDetail: any): Promise<void>;
    addToCart(event: OrderDetails): Promise<void>;
    didCollectCash(event: any): Promise<void>;
    createStockHistory(): Promise<void>;
    saveOrderUpdated(event: any): Promise<void>;
}
//# sourceMappingURL=flipper-pos.component.d.ts.map